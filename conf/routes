# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET     /login                      controllers.Authentication.login
POST    /login                      controllers.Authentication.authenticate
GET     /logout                     controllers.Authentication.logout

# Spark Stream
GET     /stream                     controllers.SparkStream.stream
POST     /stremupload              controllers.SparkStream.stremupload
GET     /streamArgs               controllers.SparkStream.streamArgs
POST     /streamExecute                controllers.SparkStream.streamExecute
GET     /errorpage                  controllers.SparkStream.errorpage

# Saprk Sql
GET      /sparksql                   controllers.SparkSql.sqlpage
POST     /executesql                 controllers.SparkSql.executesql
GET      /download                    controllers.SparkSql.download

#Dashboard
GET     /yarnInfo                   controllers.YarnList.yarnInfo
GET     /yarnlist                   controllers.YarnList.yarnlist
GET     /workerlist                 controllers.YarnList.workerlistdata
GET     /workerInfo                  controllers.YarnList.workerInfo
GET     /spark_info                 controllers.YarnList.spark_info
GET     /sparklist                  controllers.YarnList.sparklist
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#User
GET     /registration                controllers.Authentication.registration
POST    /registration                controllers.Authentication.verifying
GET     /mail                         controllers.Authentication.mail(user)
GET     /mail/verifyingmail             controllers.Authentication.verifyingmail(email,validateCode)
GET     /findpwd                   controllers.Authentication.findpwd
GET    /captcha                          controllers.Authentication.captcha
POST    /findpwd                  controllers.Authentication.resetpwd
GET     /mail/setpwd                     controllers.Authentication.setpwd(email,pwdToken)
POST   /updatepwd                   controllers.Authentication.updatepwd



# Spark Jar
#GET     /sparkjar                     controllers.SparkJar.uploadpage
POST     /sparkjar                     controllers.SparkJar.upload
GET     /executejar                    controllers.SparkJar.executejarpage
POST     /executejar                   controllers.SparkJar.executejar
GET     /errorpage                     controllers.SparkJar.errorpage
GET     /logs                          controllers.SparkJar.logs(id:String)
GET    /runtasklogs                    controllers.RunTask.runTaskLogs
GET    /he                             controllers.SparkJar.he(id:String)


#Dashboard
GET     /yarnInfo                     controllers.YarnList.yarnInfo
GET     /yarnlist                     controllers.YarnList.yarnlist
GET     /workerlist                   controllers.YarnList.workerlistdata
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


GET   /jobs                          controllers.MonitorController.jobs
GET   /streaming                     controllers.MonitorController.streaming(appui:String)

#ServicePlan
GET    /widgets                       controllers.Serviceplan.servicedao
#GET    /serviceplan                   controllers.Serviceplan.servicedao
GET    /functionplan                  controllers.Serviceplan.functionplan
#UserCounts
GET    /usertatol                     controllers.Usertally.usertatol


#Dispatch
GET    /dispatch                     controllers.Oozie.oozie

#Alarm
GET    /alarm                     controllers.AlarmDisk.alarmDisk

#RunTask
GET    /runTask                     controllers.RunTask.runTask


#Test
GET    /graph                     controllers.Serviceplan.graph


#Authority
GET    /userlist                  controllers.UserManager.userlist
GET   /usergroup                    controllers.UserManager.usergroup
GET   /rmgroup                      controllers.UserManager.rmgroup(email:String)
GET  /addgroup                      controllers.UserManager.addgroup(email:String,name:String,group:String,queue:String)

